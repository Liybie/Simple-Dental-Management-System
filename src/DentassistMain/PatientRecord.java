/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DentassistMain;

import com.toedter.calendar.JDateChooser;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;




/**
 *
 * @author Paragatos
 */
public class PatientRecord extends javax.swing.JFrame {

    /**
     * Creates new form PatientRecord
     */
    DefaultTableModel model;
    private JDateChooser jDate1;
    private TableRowSorter<DefaultTableModel> sorter;
    
    public PatientRecord() {
       initComponents();

    // Populate gender ComboBox
    cmbGender.addItem("Male");
    cmbGender.addItem("Female");
    cmbGender.addItem("Other");

    // Populate doctor ComboBox
    cmbDoctor.addItem("Dr. Cherry");
    cmbDoctor.addItem("Dr. Ritchie");

    // Set up the table model
    model = new DefaultTableModel(
        new String[]{"ID", "Name", "Age", "Gender", "Address", "Contact", "Doctor", "Schedule", "Treatment", "Balance"}, 0
    );
    jTable1.setModel(model);

    // Load existing records
    loadDataFromFile();
    getNextID();

    // Enable table search sorting
    sorter = new TableRowSorter<>(model);
    jTable1.setRowSorter(sorter);

    // Add search functionality to txtSearch
    txtSearch.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            search(txtSearch.getText());
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            search(txtSearch.getText());
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            search(txtSearch.getText());
        }

        private void search(String str) {
            if (str.trim().length() == 0) {
                sorter.setRowFilter(null);
            } else {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + str)); // case-insensitive
            }
        }
    });

    // Input restrictions

    // Name – only letters and space
    txtName.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            char c = evt.getKeyChar();
            if (!Character.isLetter(c) && !Character.isWhitespace(c)) {
                evt.consume();
            }
        }
    });

    // Age – only digits
    txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (!Character.isDigit(evt.getKeyChar())) {
                evt.consume();
            }
        }
    });

    // Contact – only digits, max 11 characters
    txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            String text = txtContact.getText();
            if (!Character.isDigit(evt.getKeyChar()) || text.length() >= 11) {
                evt.consume();
            }
        }
    });

    // Balance – digits and decimal point
    txtBalance.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            char c = evt.getKeyChar();
            String text = txtBalance.getText();
            if (!Character.isDigit(c) && c != '.') {
                evt.consume();
            } else if (c == '.' && text.contains(".")) {
                evt.consume();
            }
        }
    });
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtAddress = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtBalance = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtTreatment = new javax.swing.JTextField();
        cmbDoctor = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cmbGender = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        btnDentist = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1464, 611));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setPreferredSize(new java.awt.Dimension(600, 261));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 140, 850, 262));
        jPanel1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, 180, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 180, -1));
        jPanel1.add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 180, -1));

        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });
        jPanel1.add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, 180, -1));
        jPanel1.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 180, -1));
        jPanel1.add(txtTreatment, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, 180, -1));

        cmbDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cmbDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDoctorActionPerformed(evt);
            }
        });
        jPanel1.add(cmbDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 290, 180, -1));

        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 180, -1));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 460, -1, -1));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 460, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 460, -1, -1));

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jPanel1.add(cmbGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 180, -1));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        jPanel1.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 420, 810, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 420, 60, 20));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 60, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Age");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 60, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Gender");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 60, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Adress");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 60, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Contact");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 60, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Doctor");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, 60, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Date");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 60, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Treatment");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, 60, -1));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Balance");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, 60, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon("C:\\Users\\Paragatos\\Documents\\Liybie's files\\P-1.1\\Dentassist\\Dentassist\\src\\Icon\\image-removebg-preview (2) (2).png")); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 0, 210, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btnDentist.setText("Dentists");
        btnDentist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDentistActionPerformed(evt);
            }
        });
        jPanel2.add(btnDentist, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 279, 177, 52));

        jButton6.setBackground(new java.awt.Color(0, 74, 146));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Patient Records");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 343, 177, 52));

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        jPanel2.add(btnLogOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 529, 177, 50));

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\Paragatos\\Documents\\Liybie's files\\P-1.1\\Login-SignUp-java-gui-main\\Dentassist\\src\\Icon\\Tooth.png")); // NOI18N
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 32, -1, -1));

        jLabel13.setText("Assisstant");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        jPanel2.add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 221, 177, 52));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 611));

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Paragatos\\Documents\\Liybie's files\\P-1.1\\Dentassist\\Dentassist\\src\\Icon\\BgColor.png")); // NOI18N
        jLabel10.setText("jLabel9");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    int row = jTable1.getSelectedRow();

    if (row >= 0) {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    String id = model.getValueAt(row, 0).toString();
    String name = model.getValueAt(row, 1).toString();
    int age = Integer.parseInt(model.getValueAt(row, 2).toString());
    String gender = model.getValueAt(row, 3).toString();
    String address = model.getValueAt(row, 4).toString();
    String contact = model.getValueAt(row, 5).toString();
    String doctor = model.getValueAt(row, 6).toString();
    String schedule = model.getValueAt(row, 7).toString();
    String treatment = model.getValueAt(row, 8).toString();
    float balance = Float.parseFloat(model.getValueAt(row, 9).toString());

    txtName.setText(name);
    txtAge.setText(String.valueOf(age)); 
    cmbGender.setSelectedItem(gender);
    txtAddress.setText(address);
    txtContact.setText(contact);
    cmbDoctor.setSelectedItem(doctor);
    txtTreatment.setText(treatment);
    txtBalance.setText(String.valueOf(balance));

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date = sdf.parse(schedule);
            jDateChooser1.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_jTable1MouseClicked

    private void cmbDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDoctorActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String schedule = jDateChooser1.getDate() != null ? sdf.format(jDateChooser1.getDate()) : "";
    // Auto-generate ID
    String id = String.valueOf(getNextID());

        try {
        int age = Integer.parseInt(txtAge.getText().trim());
        float balance = Float.parseFloat(txtBalance.getText().trim());

        // Add new row to table
            model.addRow(new Object[]{
            id,
            txtName.getText().trim(),
            age,
            cmbGender.getSelectedItem().toString(),
            txtAddress.getText().trim(),
            txtContact.getText().trim(),
            cmbDoctor.getSelectedItem().toString(),
            schedule,
            txtTreatment.getText().trim(),
            balance
        });

        saveDataToFile();
        clearFields();

        JOptionPane.showMessageDialog(this, "Patient added successfully!");

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid number for age and balance.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
    int selectedRow = jTable1.getSelectedRow();

    if (selectedRow >= 0) {
        try {
            // Validate and parse numeric values
            int age = Integer.parseInt(txtAge.getText().trim());
            float balance = Float.parseFloat(txtBalance.getText().trim());

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String schedule = jDateChooser1.getDate() != null ? sdf.format(jDateChooser1.getDate()) : "";

            // Update table values
            model.setValueAt(txtName.getText().trim(), selectedRow, 1);
            model.setValueAt(age, selectedRow, 2);
            model.setValueAt(cmbGender.getSelectedItem().toString(), selectedRow, 3);
            model.setValueAt(txtAddress.getText().trim(), selectedRow, 4);
            model.setValueAt(txtContact.getText().trim(), selectedRow, 5);
            model.setValueAt(cmbDoctor.getSelectedItem().toString(), selectedRow, 6);
            model.setValueAt(schedule, selectedRow, 7);
            model.setValueAt(txtTreatment.getText().trim(), selectedRow, 8);
            model.setValueAt(balance, selectedRow, 9);

            saveDataToFile();
            JOptionPane.showMessageDialog(this, "Patient record updated!");
            clearFields();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numbers for age and balance.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a record to update.");
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
      int selectedRow = jTable1.getSelectedRow();
    if (selectedRow >= 0) {
        int choice = JOptionPane.showConfirmDialog(
            this,
            "Are you sure you want to delete this patient record?",
            "Confirm Deletion",
            JOptionPane.YES_NO_OPTION
        );

        if (choice == JOptionPane.YES_OPTION) {
            model.removeRow(selectedRow);
            saveDataToFile();
            JOptionPane.showMessageDialog(this, "Patient record deleted!");
            clearFields();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a record to delete.");
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
    txtName.setText("");
    txtAge.setText("");
    cmbGender.setSelectedIndex(0);
    txtAddress.setText("");
    txtContact.setText("");
    cmbDoctor.setSelectedIndex(0);
    jDateChooser1.setDate(null);
    txtTreatment.setText("");
    txtBalance.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnDentistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDentistActionPerformed
        Dentists dent = new Dentists();
        dent.setVisible(true);
        dent.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnDentistActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(
            this,
            "Are you sure you want to log out?",
            "Confirm Logout",
            JOptionPane.YES_NO_OPTION
        );

        // If the user clicks YES, proceed to Login
        if (choice == JOptionPane.YES_OPTION) {
            Login loginWindow = new Login();
            loginWindow.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
    HomePage home = new HomePage(); 
    home.setVisible(true);
    home.setLocationRelativeTo(null); 
    this.dispose();
        
       
    }//GEN-LAST:event_btnHomeActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDentist;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbDoctor;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTreatment;
    // End of variables declaration//GEN-END:variables

    private void loadDataFromFile() {
         File file = new File("Database.txt");
    if (!file.exists()) {
        JOptionPane.showMessageDialog(this, "Database.txt not found!");
        return;
    }

    try (BufferedReader br = new BufferedReader(new FileReader(file))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");
            if (data.length == 10) { // Expecting 10 columns
                model.addRow(data);
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error reading file: " + e.getMessage());
    }
    }

    private int getNextID() {
       int rowCount = model.getRowCount();
    int maxID = 0;

    for (int i = 0; i < rowCount; i++) {
        try {
            int id = Integer.parseInt(model.getValueAt(i, 0).toString());
            if (id > maxID) {
                maxID = id;
            }
        } catch (NumberFormatException e) {
            // Ignore invalid number formats
        }
    }

    return maxID + 1;
    }

    private void saveDataToFile() {
         try (BufferedWriter bw = new BufferedWriter(new FileWriter("Database.txt"))) {
        for (int i = 0; i < model.getRowCount(); i++) {
            StringBuilder sb = new StringBuilder();
            for (int j = 0; j < model.getColumnCount(); j++) {
                sb.append(model.getValueAt(i, j));
                if (j < model.getColumnCount() - 1) {
                    sb.append(",");
                }
            }
            bw.write(sb.toString());
            bw.newLine();
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage());
    }
}

    private void clearFields() {
     txtName.setText("");
    txtAge.setText("");
    cmbGender.setSelectedIndex(0);
    txtAddress.setText("");
    txtContact.setText("");
    cmbDoctor.setSelectedIndex(0);
    jDateChooser1.setDate(null);
    txtTreatment.setText("");
    txtBalance.setText("");
    }
}
